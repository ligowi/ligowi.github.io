<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LGodv</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-04T02:18:32.011Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>LGodv</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis密码无效问题</title>
    <link href="http://example.com/2021/06/04/redis%E5%AF%86%E7%A0%81%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/06/04/redis%E5%AF%86%E7%A0%81%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/</id>
    <published>2021-06-04T01:23:55.000Z</published>
    <updated>2021-06-04T02:18:32.011Z</updated>
    
    <content type="html"><![CDATA[<p>当我们安装了redis服务后，发现在其配置文件设置的密码无效！</p><a id="more"></a><p>当我们安装了redis服务后，发现在其配置文件redis.windows.conf（或redis.conf）设置了密码：requirepass 123456</p><p>但是打开redis-cli.exe后输入命令config get requirepass发现：</p><p><img src="/2021/06/04/redis%E5%AF%86%E7%A0%81%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/image-20210604101209441.png" alt="image-20210604101209441"></p><p>这说明配置文件中密码设置后没有生效。<br>原因：问题在于我们启动redis服务时是直接在其安装目录中双击redis-server.exe启动的，这样启动的结果是，配置文件不会指定，此时redis并不会自动使用安装目录下的redis.windows.conf（或redis.conf）文件 </p><p><img src="/2021/06/04/redis%E5%AF%86%E7%A0%81%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/image-20210604101401805.png" alt="image-20210604101401805"></p><p>红线框住的的提示说的很明确“ Warning: no config file specified”没有指定配置文件<br>解决方法：</p><p>法1：实际上我们直接在安装目录中启动redis服务时错误的，正确的方式是打开“运行”，键入“cmd”切到安装目录后输出redis-server.exe redis.windows.conf，回车，就可以了。 </p><p>法2：在redis安装目录下新建文件server.bat后，右击“编辑”，或者先用记事本建立该文件，再把扩展名改一下，文件里面写上：redis-server.exe redis.windows.conf。保存，以后再运行就直接运行这个文件，不要再直接运行redis-server.exe了，就可以了。 </p><p><img src="/2021/06/04/redis%E5%AF%86%E7%A0%81%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/image-20210604101449587.png" alt="image-20210604101449587"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;当我们安装了redis服务后，发现在其配置文件设置的密码无效！&lt;/p&gt;</summary>
    
    
    
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>问题</title>
    <link href="http://example.com/2021/03/26/Layui%E9%A1%B5%E9%9D%A2%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/03/26/Layui%E9%A1%B5%E9%9D%A2%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</id>
    <published>2021-03-26T09:20:20.000Z</published>
    <updated>2021-03-26T09:24:21.376Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用Layui渲染页面的时，想要在input标签上添加表单校验，在input添加了lay-verify=”required”后出现了BUG。</p><a id="more"></a><p>系统报错如下图</p><p><img src="/2021/03/26/Layui%E9%A1%B5%E9%9D%A2%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/image-20210326172236678.png" alt="image-20210326172236678"></p><p>通过(Line = 14, Column = 98) Malformed markup: Attribute “lay-verify” appears more than once in element分析：</p><p>Bug应该是lay-verify=””字段重复，将lay-verify=””字段删除掉一个即可！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天使用Layui渲染页面的时，想要在input标签上添加表单校验，在input添加了lay-verify=”required”后出现了BUG。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Layui" scheme="http://example.com/tags/Layui/"/>
    
  </entry>
  
  <entry>
    <title>layui表格动态渲染问题</title>
    <link href="http://example.com/2021/03/21/layui%E8%A1%A8%E6%A0%BC%E5%8A%A8%E6%80%81%E6%B8%B2%E6%9F%93%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/03/21/layui%E8%A1%A8%E6%A0%BC%E5%8A%A8%E6%80%81%E6%B8%B2%E6%9F%93%E9%97%AE%E9%A2%98/</id>
    <published>2021-03-20T17:03:24.000Z</published>
    <updated>2021-03-26T09:24:33.446Z</updated>
    
    <content type="html"><![CDATA[<p>表格重载，options的所有属性不会更新。</p><a id="more"></a><p>解决思路：重载前执行一次封装了渲染的函数，也就是调用tableRender(); 将表格的参数传递进去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;表格渲染函数</span><br><span class="line">function tableRender(url,cols_arr)&#123;</span><br><span class="line">            table.render(&#123;</span><br><span class="line">                elem: &#39;#user-table&#39;</span><br><span class="line">                , url: url &#x2F;&#x2F;数据接口</span><br><span class="line">                , page: true &#x2F;&#x2F;开启分页</span><br><span class="line">                , cols: cols_arr</span><br><span class="line">                , id: &#39;tableReload&#39;</span><br><span class="line">                ,skin: &#39;line&#39;</span><br><span class="line">                ,height: &#39;full-148&#39;</span><br><span class="line">                ,toolbar: &#39;#user-toolbar&#39;</span><br><span class="line">                ,text: &#123;none: &#39;暂无邮件信息&#39;&#125;</span><br><span class="line">                ,defaultToolbar: [&#123;layEvent: &#39;refresh&#39;, icon: &#39;layui-icon-refresh&#39;&#125;, &#39;filter&#39;, &#39;print&#39;, &#39;exports&#39;]</span><br><span class="line">                , done: function (res) &#123;&#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">&#x2F;&#x2F;调用一次表格渲染,然后在调用表格重载即可</span><br><span class="line">  tableRender(&#39;data&#39;,col1);</span><br><span class="line">                table.reload(&#39;tableReload&#39;, &#123;</span><br><span class="line">                    page: &#123;</span><br><span class="line">                        curr: 1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    where: &#123;</span><br><span class="line">                        deleted: &#39;&#39;</span><br><span class="line">                        ,status: &#39;&#39;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;表格重载，options的所有属性不会更新。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Layui" scheme="http://example.com/tags/Layui/"/>
    
  </entry>
  
  <entry>
    <title>解决springboot文件上传超过限制错误</title>
    <link href="http://example.com/2021/03/09/%E8%A7%A3%E5%86%B3springboot%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%B6%85%E8%BF%87%E9%99%90%E5%88%B6%E9%94%99%E8%AF%AF/"/>
    <id>http://example.com/2021/03/09/%E8%A7%A3%E5%86%B3springboot%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%B6%85%E8%BF%87%E9%99%90%E5%88%B6%E9%94%99%E8%AF%AF/</id>
    <published>2021-03-09T11:56:53.000Z</published>
    <updated>2021-03-09T12:09:54.020Z</updated>
    
    <content type="html"><![CDATA[<p> springboot上传文件出现 The field file exceeds its maximum permitted size of 1048576 bytes错误</p><a id="more"></a><p>原因是因为SpringBoot内嵌tomcat默认所能上传的文件大小为1M,超出这个就会报错。</p><h3 id="一、适用于springboot1-x"><a href="#一、适用于springboot1-x" class="headerlink" title="一、适用于springboot1.x"></a>一、适用于springboot1.x</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#springboot2.x使用这个无效</span><br><span class="line">spring:</span><br><span class="line">  http:</span><br><span class="line">    multipart:</span><br><span class="line">      enabled: true</span><br><span class="line">      max-file-size: 30MB</span><br><span class="line">      max-request-size: 30MB</span><br></pre></td></tr></table></figure><h3 id="二、适用于springboot2-x"><a href="#二、适用于springboot2-x" class="headerlink" title="二、适用于springboot2.x"></a>二、适用于springboot2.x</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##springboot1.x使用这个无效</span><br><span class="line">spring:</span><br><span class="line">  servlet:</span><br><span class="line">    multipart:</span><br><span class="line">      enabled: true</span><br><span class="line">      max-file-size: 30MB</span><br><span class="line">      max-request-size: 30MB</span><br></pre></td></tr></table></figure><h3 id="三、编写配置类"><a href="#三、编写配置类" class="headerlink" title="三、编写配置类"></a>三、编写配置类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> import javax.servlet.MultipartConfigElement;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.web.servlet.MultipartConfigFactory;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class MulterFile &#123;</span><br><span class="line">    &#x2F;**  </span><br><span class="line">     * 文件上传配置  </span><br><span class="line">     * @return  </span><br><span class="line">     *&#x2F;  </span><br><span class="line">    @Bean  </span><br><span class="line">    public MultipartConfigElement multipartConfigElement() &#123;  </span><br><span class="line">        MultipartConfigFactory factory &#x3D; new MultipartConfigFactory();  </span><br><span class="line">        &#x2F;&#x2F;文件最大  </span><br><span class="line">        factory.setMaxFileSize(&quot;30960KB&quot;); &#x2F;&#x2F;KB,MB  </span><br><span class="line">        &#x2F;&#x2F;&#x2F; 设置总上传数据总大小  </span><br><span class="line">        factory.setMaxRequestSize(&quot;309600KB&quot;);  </span><br><span class="line">        return factory.createMultipartConfig();  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; springboot上传文件出现 The field file exceeds its maximum permitted size of 1048576 bytes错误&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://example.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>执行set-executionpolicy RemoteSigned问题</title>
    <link href="http://example.com/2021/02/04/RemoteSigned%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/02/04/RemoteSigned%E9%97%AE%E9%A2%98/</id>
    <published>2021-02-04T11:23:27.000Z</published>
    <updated>2021-02-04T11:25:55.114Z</updated>
    
    <content type="html"><![CDATA[<p>执行set-ExecutionPolicy RemoteSigned后出现以下错误：</p><a id="more"></a><p>set-ExecutionPolicy : 对注册表项“HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell”的访问被拒绝。 要更改默认(LocalMachine)作用域的<br>执行策略，请使用“以管理员身份运行”选项启动 Windows PowerShell。要更改当前用户的执行策略，请运行 “Set-ExecutionPolicy -Scope CurrentUser”。<br>所在位置 行:1 字符: 1</p><ul><li>set-ExecutionPolicy RemoteSigned</li><li><pre><code>  + CategoryInfo          : PermissionDenied: (:) [Set-ExecutionPolicy], UnauthorizedAccessException  + FullyQualifiedErrorId : System.UnauthorizedAccessException,Microsoft.PowerShell.Commands.SetExecutionPolicyCommand</code></pre></li></ul><p>解决办法：</p><p>1》Windows+R；</p><p>2》输入PowerShel l；</p><p>3》运行 “Set-ExecutionPolicy -Scope CurrentUser”；</p><p>4》出现ExecutionPolicy: ，填入RemoteSigned；</p><p>5》输入Y</p><p>6》关闭PowerShel ，然后执行get-ExecutionPolicy，发现变成了RemoteSigned，就成功了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;执行set-ExecutionPolicy RemoteSigned后出现以下错误：&lt;/p&gt;</summary>
    
    
    
    
    <category term="系统" scheme="http://example.com/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>常用的工具类</title>
    <link href="http://example.com/2021/01/27/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>http://example.com/2021/01/27/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/</id>
    <published>2021-01-27T13:23:55.000Z</published>
    <updated>2021-01-28T05:09:38.212Z</updated>
    
    <content type="html"><![CDATA[<p>这篇记录了我一些常用的工具类，有需要的话改改就可以使用!</p><a id="more"></a><h3 id="一、树形菜单工具类"><a href="#一、树形菜单工具类" class="headerlink" title="一、树形菜单工具类"></a>一、树形菜单工具类</h3><h4 id="1-1-工具类代码"><a href="#1-1-工具类代码" class="headerlink" title="1.1 工具类代码"></a>1.1 工具类代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;其中Menu是实体类</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">* @Description: 获取树形菜单</span><br><span class="line">*&#x2F;</span><br><span class="line">public class MenuUtil &#123;</span><br><span class="line">    private List&lt;Menu&gt; menuList &#x3D; new ArrayList&lt;Menu&gt;();</span><br><span class="line">    public MenuUtil(List&lt;Menu&gt; menuList) &#123;</span><br><span class="line">        this.menuList&#x3D;menuList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;建立树形结构</span><br><span class="line">    public List&lt;Menu&gt; builTree()&#123;</span><br><span class="line">        List&lt;Menu&gt; treeMenus &#x3D;new  ArrayList&lt;Menu&gt;();</span><br><span class="line">        for(Menu menuNode : getRootNode()) &#123;</span><br><span class="line">            menuNode&#x3D;buildChilTree(menuNode);</span><br><span class="line">            treeMenus.add(menuNode);</span><br><span class="line">        &#125;</span><br><span class="line">        return treeMenus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;递归，建立子树形结构</span><br><span class="line">    private Menu buildChilTree(Menu pNode)&#123;</span><br><span class="line">        List&lt;Menu&gt; chilMenus &#x3D;new  ArrayList&lt;Menu&gt;();</span><br><span class="line">        for(Menu menuNode : menuList) &#123;</span><br><span class="line">            if(menuNode.getPid().equals(pNode.getId())) &#123;</span><br><span class="line">                chilMenus.add(buildChilTree(menuNode));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        pNode.setChildMenuList(chilMenus);</span><br><span class="line">        return pNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;获取根节点</span><br><span class="line">    private List&lt;Menu&gt; getRootNode() &#123;</span><br><span class="line">        List&lt;Menu&gt; rootMenuLists &#x3D;new  ArrayList&lt;Menu&gt;();</span><br><span class="line">        for(Menu menuNode : menuList) &#123;</span><br><span class="line">            if(menuNode.getPid().equals(&quot;0&quot;)) &#123;</span><br><span class="line">                rootMenuLists.add(menuNode);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return rootMenuLists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-2-实体类代码"><a href="#1-2-实体类代码" class="headerlink" title="1.2 实体类代码"></a>1.2 实体类代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package com.ywb.demo.entity;</span><br><span class="line"></span><br><span class="line">import lombok.Data;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">public class Menu &#123;</span><br><span class="line">    private String id;</span><br><span class="line">    private String name;</span><br><span class="line">    private String pid;</span><br><span class="line">    private String url;</span><br><span class="line">    private String userId;</span><br><span class="line">    private String menuId;</span><br><span class="line">    private List&lt;Menu&gt; childMenuList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-3-使用"><a href="#1-3-使用" class="headerlink" title="1.3 使用"></a>1.3 使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;getMenuList为获取所有菜单</span><br><span class="line">List&lt;Menu&gt; menuList &#x3D; menuMapper.getMenuList(userId);</span><br><span class="line">MenuUtil mt &#x3D; new MenuUtil(menuList);</span><br><span class="line">menuList &#x3D; mt.builTree();</span><br><span class="line">System.out.println(menuList);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;这篇记录了我一些常用的工具类，有需要的话改改就可以使用!&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JdbcTemplatey的学习</title>
    <link href="http://example.com/2021/01/21/JdbcTemplatey%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/01/21/JdbcTemplatey%E7%9A%84%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-01-21T13:37:56.000Z</published>
    <updated>2021-01-22T05:12:51.841Z</updated>
    
    <content type="html"><![CDATA[<p> 这篇是学习JdbcTemplatey的过程分享，如果有问题请联系我进行修改！</p><a id="more"></a><h4 id="一、JdbcTemplatey实例化对象"><a href="#一、JdbcTemplatey实例化对象" class="headerlink" title="一、JdbcTemplatey实例化对象"></a>一、JdbcTemplatey实例化对象</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">TestSQL类</span><br><span class="line"> private DataSource dataSource;</span><br><span class="line">    public DataSource getDataSource() &#123;</span><br><span class="line">        return dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setDataSource(DataSource dataSource) &#123;</span><br><span class="line">        this.dataSource &#x3D; dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">    public void queryTable()&#123;</span><br><span class="line">    &#x2F;&#x2F;这种的JdbcTemplate是实例化对象的，不是注入的</span><br><span class="line">        JdbcTemplate template &#x3D; new JdbcTemplate(this.dataSource);</span><br><span class="line">        String sql  &#x3D; &quot;select * from user&quot;;</span><br><span class="line">        List&lt;Map&lt;String,Object&gt;&gt; dataList &#x3D; template.queryForList(sql);</span><br><span class="line">        for(Map&lt;String,Object&gt; rowData :dataList)&#123;</span><br><span class="line">            System.out.println(rowData.get(&quot;userId&quot;)+&quot;\t&quot;+rowData.get(&quot;userName&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        TestSQL testSQL &#x3D; (TestSQL)SpringUtil.getBean(&quot;TestSQL&quot;);</span><br><span class="line">        testSQL.queryTable();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">spring配置文件</span><br><span class="line">需要注入dataSource</span><br><span class="line">&lt;bean id&#x3D;&quot;TestSQL&quot; class&#x3D;&quot;com.test.TestSQL&quot;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="二、JdbcTemplatey用Spring管理"><a href="#二、JdbcTemplatey用Spring管理" class="headerlink" title="二、JdbcTemplatey用Spring管理"></a>二、JdbcTemplatey用Spring管理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">TestSQL类</span><br><span class="line">  &#x2F;&#x2F;JdbcTemplatey用spring注入</span><br><span class="line">    private JdbcTemplate template ;</span><br><span class="line">    public JdbcTemplate getTemplate() &#123;</span><br><span class="line">        return template;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setTemplate(JdbcTemplate template) &#123;</span><br><span class="line">        this.template &#x3D; template;</span><br><span class="line">    &#125;</span><br><span class="line">    public void queryTable() &#123;</span><br><span class="line">        String sql &#x3D; &quot;select * from user&quot;;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; dataList &#x3D; this.template.queryForList(sql);</span><br><span class="line">        for (Map&lt;String, Object&gt; rowData : dataList) &#123;</span><br><span class="line">            System.out.println(rowData.get(&quot;userId&quot;) + &quot;\t&quot; +rowData.get(&quot;userName&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        TestSQL2 testSQL &#x3D; (TestSQL2) SpringUtil.getBean(&quot;TestSQL2&quot;);</span><br><span class="line">        testSQL.queryTable();</span><br><span class="line">    &#125;</span><br><span class="line">spring配置文件   </span><br><span class="line"> &lt;!--注入template--&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;jdbcTemplate&quot; class&#x3D;&quot;org.springframework.jdbc.core.JdbcTemplate&quot;&gt;</span><br><span class="line">    &lt;!--当没有注入dataSource的时候，将无法使用jdbcTemplate，因为还没有给数据源赋值--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;TestSQL2&quot; class&#x3D;&quot;com.test.TestSQL2&quot;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;template&quot; ref&#x3D;&quot;jdbcTemplate&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure><h4 id="三、执行DDL语句"><a href="#三、执行DDL语句" class="headerlink" title="三、执行DDL语句"></a>三、执行DDL语句</h4><h5 id="3-1创建temp表"><a href="#3-1创建temp表" class="headerlink" title="3.1创建temp表"></a>3.1创建temp表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">TestSQL类</span><br><span class="line">&#x2F;&#x2F;JdbcTemplatey用spring注入</span><br><span class="line">   private JdbcTemplate template ;</span><br><span class="line">   public JdbcTemplate getTemplate() &#123;</span><br><span class="line">       return template;</span><br><span class="line">   &#125;</span><br><span class="line">   public void setTemplate(JdbcTemplate template) &#123;</span><br><span class="line">       this.template &#x3D; template;</span><br><span class="line">   &#125;</span><br><span class="line">   public void create() &#123;</span><br><span class="line">       String sql &#x3D; &quot;create table temp (tempId int,tempName varchar(20))&quot;;</span><br><span class="line">        this.template.execute(sql);</span><br><span class="line">   &#125;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">       TestSQL_DDL testSQL &#x3D; (TestSQL_DDL) SpringUtil.getBean(&quot;TestSQL_DDL&quot;);</span><br><span class="line">       testSQL.create();</span><br><span class="line">       &#x2F;&#x2F;执行成功后会创建temp表 字段为int tempId和varchar类型的tempName</span><br><span class="line">   &#125;</span><br><span class="line">   spring配置文件</span><br><span class="line">    &lt;!--注入template--&gt;</span><br><span class="line">   &lt;bean id&#x3D;&quot;jdbcTemplate&quot; class&#x3D;&quot;org.springframework.jdbc.core.JdbcTemplate&quot;&gt;</span><br><span class="line">       &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class="line">   &lt;&#x2F;bean&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;TestSQL_DDL&quot; class&#x3D;&quot;com.test.TestSQL_DDL&quot;&gt;</span><br><span class="line">       &lt;property name&#x3D;&quot;template&quot; ref&#x3D;&quot;jdbcTemplate&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class="line">   &lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure><h5 id="3-2修改temp表"><a href="#3-2修改temp表" class="headerlink" title="3.2修改temp表"></a>3.2修改temp表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public void alter() &#123;</span><br><span class="line">      String sql &#x3D; &quot;ALTER table temp add password varchar(10) &quot;;</span><br><span class="line">      this.template.execute(sql);</span><br><span class="line">  &#125;</span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">      TestSQL_DDL testSQL &#x3D; (TestSQL_DDL) SpringUtil.getBean(&quot;TestSQL_DDL&quot;);</span><br><span class="line">      testSQL.alter();</span><br><span class="line">      &#x2F;&#x2F;执行成功后会修改temp表，增加字段为varchar password</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="3-3删除temp表"><a href="#3-3删除temp表" class="headerlink" title="3.3删除temp表"></a>3.3删除temp表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> public void drop() &#123;</span><br><span class="line">       String sql &#x3D; &quot;drop table temp &quot;;</span><br><span class="line">       this.template.execute(sql);</span><br><span class="line">   &#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">       TestSQL_DDL testSQL &#x3D; (TestSQL_DDL) SpringUtil.getBean(&quot;TestSQL_DDL&quot;);</span><br><span class="line">       testSQL.drop();</span><br><span class="line">       &#x2F;&#x2F;执行成功后会删除temp表 </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="四、执行DML语句"><a href="#四、执行DML语句" class="headerlink" title="四、执行DML语句"></a>四、执行DML语句</h4><h5 id="4-1insert语句—statement对象"><a href="#4-1insert语句—statement对象" class="headerlink" title="4.1insert语句—statement对象"></a>4.1insert语句—statement对象</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">TestSQL类</span><br><span class="line">    private JdbcTemplate template ;</span><br><span class="line">    public JdbcTemplate getTemplate() &#123;</span><br><span class="line">        return template;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setTemplate(JdbcTemplate template) &#123;</span><br><span class="line">        this.template &#x3D; template;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;相当于jdbc的statement对象的操作</span><br><span class="line">    public void insert() &#123;</span><br><span class="line">        String sql &#x3D; &quot;insert into admin (userName,password) value (&#39;aaa&#39;,&#39;bbb&#39;)&quot;;</span><br><span class="line">         this.template.update(sql);</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        TestSQL_DML testSQL &#x3D; (TestSQL_DML) SpringUtil.getBean(&quot;TestSQL_DML&quot;);</span><br><span class="line">        testSQL.insert();</span><br><span class="line">        &#x2F;&#x2F;执行后会在admin表插入userName为aaa和password为bbb</span><br><span class="line">    &#125;</span><br><span class="line">spring配置文件</span><br><span class="line">     &lt;bean id&#x3D;&quot;TestSQL_DML&quot; class&#x3D;&quot;com.test.TestSQL_DML&quot;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;template&quot; ref&#x3D;&quot;jdbcTemplate&quot;&gt;&lt;&#x2F;property&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure><h5 id="4-2insert语句—Preparedstatemen对象（建议）"><a href="#4-2insert语句—Preparedstatemen对象（建议）" class="headerlink" title="4.2insert语句—Preparedstatemen对象（建议）"></a>4.2insert语句—Preparedstatemen对象（建议）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    &#x2F;*</span><br><span class="line">     相当于jdbc的Preparedstatement对象的操作,创建一个匿名内部类PreparedStatementSetter对象(建议)</span><br><span class="line">    *&#x2F;</span><br><span class="line">public void insert_2() &#123;</span><br><span class="line">       String sql &#x3D; &quot;insert into admin (userName,password) value (?,?)&quot;;</span><br><span class="line">       this.template.update(sql, new PreparedStatementSetter() &#123;</span><br><span class="line">       &#x2F;&#x2F;匿名内部类的写法</span><br><span class="line">           @Override</span><br><span class="line">           public void setValues(PreparedStatement ps) throws SQLException &#123;</span><br><span class="line">               ps.setString(1,&quot;abc&quot;);</span><br><span class="line">               ps.setString(2,&quot;bbb&quot;);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="4-3insert语句—Bean对象（不建议）"><a href="#4-3insert语句—Bean对象（不建议）" class="headerlink" title="4.3insert语句—Bean对象（不建议）"></a>4.3insert语句—Bean对象（不建议）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">     相当于jdbc的Preparedstatement对象的操作,创建并返回PreparedStatementSetter对象(不建议)</span><br><span class="line">     *&#x2F;</span><br><span class="line">   public void insert_3() &#123;</span><br><span class="line">       String sql &#x3D; &quot;insert into admin (userName,password) value (?,?)&quot;;</span><br><span class="line">       this.template.update(new PreparedStatementCreator() &#123;</span><br><span class="line">           @Override</span><br><span class="line">           public PreparedStatement createPreparedStatement(Connection connection) throws SQLException &#123;</span><br><span class="line">               PreparedStatement statement &#x3D; connection.prepareStatement(sql);</span><br><span class="line">               statement.setString(1,&quot;test1&quot;);</span><br><span class="line">               statement.setString(2,&quot;testpwd&quot;);</span><br><span class="line">               return statement;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="4-4使用Object数组对象（建议）"><a href="#4-4使用Object数组对象（建议）" class="headerlink" title="4.4使用Object数组对象（建议）"></a>4.4使用Object数组对象（建议）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line"> 相当于jdbc的Preparedstatement对象的操作,使用object数组对象(建议)</span><br><span class="line"> *&#x2F;</span><br><span class="line">  public void insert_4() &#123;</span><br><span class="line">      String sql &#x3D; &quot;insert into admin (userName,password) value (?,?)&quot;;</span><br><span class="line">      Object[] paramArray &#x3D; &#123;&quot;aabc&quot;,&quot;dcee&quot;&#125;;</span><br><span class="line">      this.template.update(sql,paramArray);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="4-5使用Map作为参数执行insert语句"><a href="#4-5使用Map作为参数执行insert语句" class="headerlink" title="4.5使用Map作为参数执行insert语句"></a>4.5使用Map作为参数执行insert语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public void insertParameter() &#123;</span><br><span class="line">       String sql &#x3D; &quot;insert into admin (userName,password) value (:userName,:password)&quot;;</span><br><span class="line">       NamedParameterJdbcTemplate template &#x3D; new NamedParameterJdbcTemplate(this.template.getDataSource());</span><br><span class="line">       Map&lt;String,Object&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">       &#x2F;&#x2F;map中的key要和参数一致,map中的数据可以比value中指定的参数多，但不能少</span><br><span class="line">       map.put(&quot;userName&quot;,&quot;test2&quot;);</span><br><span class="line">       map.put(&quot;password&quot;,&quot;testpwd2&quot;);</span><br><span class="line">       template.update(sql,map);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="4-6使用Bean作为参数执行insert语句"><a href="#4-6使用Bean作为参数执行insert语句" class="headerlink" title="4.6使用Bean作为参数执行insert语句"></a>4.6使用Bean作为参数执行insert语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public void insertBean()&#123;</span><br><span class="line">        String sql &#x3D; &quot;insert into admin (userName,password) value (:userName,:password)&quot;;</span><br><span class="line">        NamedParameterJdbcTemplate template &#x3D; new NamedParameterJdbcTemplate(this.template.getDataSource());</span><br><span class="line">        &#x2F;*</span><br><span class="line">          Bean的属性要和value中参数的属性一致，可以多不可以少</span><br><span class="line">         *&#x2F;</span><br><span class="line">        User user &#x3D; new User();</span><br><span class="line">        user.setUserName(&quot;abbvc&quot;);</span><br><span class="line">        user.setPassword(&quot;avvv&quot;);</span><br><span class="line">        user.setUserId(123);</span><br><span class="line">        BeanPropertySqlParameterSource propertySqlParameterSource &#x3D; new BeanPropertySqlParameterSource(user);</span><br><span class="line">        template.update(sql,propertySqlParameterSource);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="五、执行Query查询语句"><a href="#五、执行Query查询语句" class="headerlink" title="五、执行Query查询语句"></a>五、执行Query查询语句</h4><h5 id="5-1-queryForList（返回Map）"><a href="#5-1-queryForList（返回Map）" class="headerlink" title="5.1 queryForList（返回Map）"></a>5.1 queryForList（返回Map）</h5><p>默认返回的是map，返回的是多行数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public void queryForList() &#123;</span><br><span class="line">    String sql &#x3D; &quot;select * from admin&quot;;</span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; dataList &#x3D; template.queryForList(sql);</span><br><span class="line">    for (Map&lt;String, Object&gt; map : dataList) &#123;</span><br><span class="line">      System.out.println(map.get(&quot;userId&quot;) + &quot;\t&quot; + map.get(&quot;userName&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">测试输出</span><br><span class="line">1admin</span><br><span class="line">2user</span><br><span class="line">3adb</span><br></pre></td></tr></table></figure><h5 id="5-2-queryForList的注意点"><a href="#5-2-queryForList的注意点" class="headerlink" title="5.2 queryForList的注意点"></a>5.2 queryForList的注意点</h5><p>直接使用queryForList不能成功返回bean类型 只能返回一个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public void queryForListBean() &#123;</span><br><span class="line">    &#x2F;*错误的写法</span><br><span class="line">    String sql &#x3D; &quot;select * from admin&quot;;</span><br><span class="line">    List&lt;User&gt;dataList &#x3D; template.queryForList(sql,User.class);</span><br><span class="line">     for(User user : dataList)&#123;</span><br><span class="line">        System.out.println(user.getUserId()+&quot;\t&quot;+user.getUserName()+&quot;\t&quot;+user.getPassword());</span><br><span class="line">     &#125;</span><br><span class="line">     *&#x2F;</span><br><span class="line">    String sql &#x3D; &quot;select userName from admin&quot;;</span><br><span class="line">    List&lt;String&gt; dataList &#x3D; template.queryForList(sql, String.class);</span><br><span class="line">    for (String str : dataList) &#123;</span><br><span class="line">      System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">错误的写法执行会报返回多个字段的错误，错误为Exception in thread &quot;main&quot; org.springframework.jdbc.IncorrectResultSetColumnCountException: Incorrect column count: expected 1, actual 5</span><br><span class="line">正确返回数据为：</span><br><span class="line"> admin</span><br><span class="line"> user</span><br><span class="line"> adb</span><br></pre></td></tr></table></figure><h5 id="5-3-queryForMap（返回单行数据）"><a href="#5-3-queryForMap（返回单行数据）" class="headerlink" title="5.3 queryForMap（返回单行数据）"></a>5.3 queryForMap（返回单行数据）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public void queryForMap() &#123;</span><br><span class="line">    String sql &#x3D; &quot;select * from admin where userId &#x3D; 2&quot;;</span><br><span class="line">    Map&lt;String, Object&gt; row &#x3D; template.queryForMap(sql);</span><br><span class="line">    if (row !&#x3D; null) &#123;</span><br><span class="line">      System.out.println(row.get(&quot;userId&quot;) + &quot;\t&quot; + row.get(&quot;userName&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">测试输出：</span><br><span class="line">2user</span><br></pre></td></tr></table></figure><h5 id="5-4-queryForObject（返回聚合函数）"><a href="#5-4-queryForObject（返回聚合函数）" class="headerlink" title="5.4 queryForObject（返回聚合函数）"></a>5.4 queryForObject（返回聚合函数）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public void queryForObject() &#123;</span><br><span class="line">    String sql &#x3D; &quot;select count(1) from admin&quot;;</span><br><span class="line">    Long userCount &#x3D; template.queryForObject(sql, long.class);</span><br><span class="line">    System.out.println(&quot;userCount&#x3D;&quot; + userCount);</span><br><span class="line">  &#125;</span><br><span class="line">  测试输出：userCount&#x3D;9</span><br></pre></td></tr></table></figure><h5 id="5-5-query返回所有数据"><a href="#5-5-query返回所有数据" class="headerlink" title="5.5 query返回所有数据"></a>5.5 query返回所有数据</h5><p>返回所有数据使用query函数，参数是sql语句+BeanPropertyRowMapper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public void query() &#123;</span><br><span class="line">    String sql &#x3D; &quot;select * from admin&quot;;</span><br><span class="line">    &#x2F;*注意这个和BeanPropertySqlParameterSource对象的区别</span><br><span class="line">        BeanPropertyRowMapper将数据映射成一个对象</span><br><span class="line">        BeanPropertySqlParameterSource将Bean对象中的值赋值给命名参数</span><br><span class="line">    *&#x2F;</span><br><span class="line">    BeanPropertyRowMapper&lt;User&gt; rowMapper &#x3D; new BeanPropertyRowMapper&lt;&gt;(User.class);</span><br><span class="line">    List&lt;User&gt; dataList &#x3D; template.query(sql, rowMapper);</span><br><span class="line">    for (User user : dataList) &#123;</span><br><span class="line">      System.out.println(user.getUserId() + &quot;\t&quot; + user.getUserName());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  测试输出：</span><br><span class="line">  1admin</span><br><span class="line">  2user</span><br><span class="line">  3adb</span><br></pre></td></tr></table></figure><h5 id="5-6-query-Pre（预编译）"><a href="#5-6-query-Pre（预编译）" class="headerlink" title="5.6 query_Pre（预编译）"></a>5.6 query_Pre（预编译）</h5><p>查询语句中包过预编译对象，？形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public void query_Pre() &#123;</span><br><span class="line">    String sql &#x3D; &quot;select * from admin where userName like ? and password like ? &quot;;</span><br><span class="line">    String[] Strarray &#x3D; &#123;&quot;%a%&quot;, &quot;%1%&quot;&#125;;</span><br><span class="line">    BeanPropertyRowMapper&lt;User&gt; rowMapper &#x3D; new BeanPropertyRowMapper&lt;&gt;(User.class);</span><br><span class="line">    List&lt;User&gt; dataList &#x3D; template.query(sql, rowMapper, Strarray);</span><br><span class="line">    for (User user : dataList) &#123;</span><br><span class="line">      System.out.println(user.getUserId() + &quot;\t&quot; + user.getUserName());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  测试输出：</span><br><span class="line"> 1admin</span><br><span class="line"> 3adb</span><br></pre></td></tr></table></figure><h5 id="5-7-queryNamePre（查询带命名参数）"><a href="#5-7-queryNamePre（查询带命名参数）" class="headerlink" title="5.7 queryNamePre（查询带命名参数）"></a>5.7 queryNamePre（查询带命名参数）</h5><p>使用：形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public void queryNamePre() &#123;</span><br><span class="line">    String sql &#x3D; &quot;select * from admin where userName like :userName and password like :password &quot;;</span><br><span class="line">    NamedParameterJdbcTemplate namedTemplate &#x3D; new NamedParameterJdbcTemplate(template.getDataSource());</span><br><span class="line">    User user &#x3D; new User();</span><br><span class="line">    user.setUserName(&quot;%a%&quot;);</span><br><span class="line">    user.setPassword(&quot;%1%&quot;);</span><br><span class="line">    BeanPropertySqlParameterSource propertySqlParameterSource &#x3D;</span><br><span class="line">        new BeanPropertySqlParameterSource(user);</span><br><span class="line">    BeanPropertyRowMapper&lt;User&gt; rowMapper &#x3D; new BeanPropertyRowMapper&lt;User&gt;(User.class);</span><br><span class="line">    List&lt;User&gt; dataList &#x3D; namedTemplate.query(sql, propertySqlParameterSource, rowMapper);</span><br><span class="line">    for (User row : dataList) &#123;</span><br><span class="line">      System.out.println(row.getUserId() + &quot;\t&quot; + row.getUserName());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> 测试输出：</span><br><span class="line"> 1admin</span><br><span class="line"> 3adb</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 这篇是学习JdbcTemplatey的过程分享，如果有问题请联系我进行修改！&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>去掉fork me on github 标签</title>
    <link href="http://example.com/2021/01/21/%E5%8E%BB%E6%8E%89fork-me-on-github-%E6%A0%87%E7%AD%BE/"/>
    <id>http://example.com/2021/01/21/%E5%8E%BB%E6%8E%89fork-me-on-github-%E6%A0%87%E7%AD%BE/</id>
    <published>2021-01-21T13:08:08.000Z</published>
    <updated>2021-01-22T04:51:30.564Z</updated>
    
    <content type="html"><![CDATA[<p> hexo去掉右上角的fork me on github的标签</p><a id="more"></a><p>是用别人的hexo主题，文章右上角会出现 fork me on github，那我们如何去掉呢？</p><p><img src="/2021/01/21/%E5%8E%BB%E6%8E%89fork-me-on-github-%E6%A0%87%E7%AD%BE/image-20210121211030559.png" alt="image-20210121211030559"></p><p>这个时候打开文件夹找到themes-主题名-layout-layout.ejs文件</p><p><img src="/2021/01/21/%E5%8E%BB%E6%8E%89fork-me-on-github-%E6%A0%87%E7%AD%BE/image-20210121210934368.png" alt="image-20210121210934368"></p><p>然后删除掉这段代码即可</p><p><img src="/2021/01/21/%E5%8E%BB%E6%8E%89fork-me-on-github-%E6%A0%87%E7%AD%BE/image-20210121211205345.png" alt="image-20210121211205345"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt; hexo去掉右上角的fork me on github的标签&lt;/p&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MySQL安装教程</title>
    <link href="http://example.com/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2021-01-21T12:05:30.000Z</published>
    <updated>2021-06-04T02:10:27.902Z</updated>
    
    <content type="html"><![CDATA[<p> 这篇博客用来记录安装压缩版MySQL的教程，便于查看。</p><a id="more"></a><h3 id="一、下载MySQL"><a href="#一、下载MySQL" class="headerlink" title="一、下载MySQL"></a><strong>一、下载MySQL</strong></h3><h4 id="1-1-到官网下载"><a href="#1-1-到官网下载" class="headerlink" title="1.1 到官网下载"></a>1.1 到官网下载</h4><p>网址是<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a> 点击download进行下载，并解压到任意目录</p><p><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202758618.png" alt="image-20210121202758618"></p><h3 id="二、配置环境变量"><a href="#二、配置环境变量" class="headerlink" title="二、配置环境变量"></a><strong>二、配置环境变量</strong></h3><p>此电脑–&gt;右键–&gt;属性–&gt;高级系统设置–&gt;环境变量–&gt;系统变量–&gt;Path–&gt;编辑–&gt;新建–&gt;填入“E:\software\MySQL\bin”–&gt;确认</p><p><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202443333.png" alt="image-20210121202443333"></p><p><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202516870.png" alt="image-20210121202516870"></p><p><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202526443.png" alt="image-20210121202526443"></p><p><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202540847.png" alt="image-20210121202540847"></p><h3 id="三、新建配置文件文件"><a href="#三、新建配置文件文件" class="headerlink" title="三、新建配置文件文件"></a><strong>三、新建配置文件文件</strong></h3><h4 id="3-1在mysql的解压目录新建my-ini文件"><a href="#3-1在mysql的解压目录新建my-ini文件" class="headerlink" title="3.1在mysql的解压目录新建my.ini文件"></a>3.1在mysql的解压目录新建my.ini文件</h4><p><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202551359.png" alt="image-20210121202551359"> </p><p>内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set&#x3D;utf8</span><br><span class="line">[mysqld]</span><br><span class="line">#设置3306端口</span><br><span class="line">port &#x3D; 3306</span><br><span class="line"># 设置mysql的安装目录 改为自己的安装目录</span><br><span class="line">basedir&#x3D;E:&#x2F;software&#x2F;MySQL</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir&#x3D;E:&#x2F;software&#x2F;MySQL&#x2F;data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections&#x3D;200</span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br></pre></td></tr></table></figure><h3 id="四、配置服务并启动"><a href="#四、配置服务并启动" class="headerlink" title="四、配置服务并启动"></a><strong>四、配置服务并启动</strong></h3><p>使用管理员身份运行CMD，并进入到mysql的安装目录的bin文件夹</p><p><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202605823.png" alt="image-20210121202605823"></p><h4 id="安装MySQL服务"><a href="#安装MySQL服务" class="headerlink" title="安装MySQL服务"></a>安装MySQL服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld install</span><br></pre></td></tr></table></figure><h4 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize</span><br></pre></td></tr></table></figure><h4 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title></a><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202622141.png" alt="image-20210121202622141"></h3><h3 id="五、查找初始密码"><a href="#五、查找初始密码" class="headerlink" title="五、查找初始密码"></a><strong>五、查找初始密码</strong></h3><p>打开MySQL的数据目录下面的.err文件，数据目录是在my.ini文件中配置的</p><p><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202637293.png" alt="image-20210121202637293"> </p><p>篮框部分就是密码</p><h3 id="-1"><a href="#-1" class="headerlink" title></a><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202645679.png" alt="image-20210121202645679"></h3><h3 id="六、修改初始密码"><a href="#六、修改初始密码" class="headerlink" title="六、修改初始密码"></a><strong>六、修改初始密码</strong></h3><h4 id="6-1-普通修改方式"><a href="#6-1-普通修改方式" class="headerlink" title="6.1 普通修改方式"></a>6.1 普通修改方式</h4><p>在cmd输入 <strong>mysql -u root -p</strong> 按回车，输入刚刚的初始密码</p><p>输入修改密码命令 <strong>set password for root@localhost = password(‘root’);</strong> </p><h4 id="-2"><a href="#-2" class="headerlink" title></a><img src="/2021/01/21/MySQL%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20210121202658784.png" alt="image-20210121202658784"></h4><h4 id="6-2使用第三方工具修改"><a href="#6-2使用第三方工具修改" class="headerlink" title="6.2使用第三方工具修改"></a>6.2使用第三方工具修改</h4><p>例如navicat等</p>]]></content>
    
    
    <summary type="html">&lt;p&gt; 这篇博客用来记录安装压缩版MySQL的教程，便于查看。&lt;/p&gt;</summary>
    
    
    
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
